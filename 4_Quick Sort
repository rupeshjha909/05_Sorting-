int partition(int *a, int s, int e)
{
	int i = s - 1;
	int j = s;

	int pivot = a[e];
	for (; j <= e - 1; )
	{
		if (a[j] <= pivot)
		{
			i++;
			swap(a[j], a[i]);
		}
		j++;
	}
	swap(a[i + 1], a[e]);
	return i + 1;
}

void QuickSort(int *a, int s, int e)
{
	if (s >= e)
		return;
	int p = partition(a, s, e);
	QuickSort(a, s, p - 1);
	QuickSort(a, p + 1, e);
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	int t;
	cin >> t;
	while (t--)
	{
		int n;
		cin >> n;
		int a[n];
		for (int i = 0; i < n; i++)
			cin >> a[i];
		QuickSort(a, 0, n - 1);

		for (int i = 0; i < n; i++)
			cout << a[i] << " ";
	}
}

int compareTo(string s1, string s2)
{
	int i = 0;
	while (i < s1.length() and i < s2.length())
	{
		if (s1[i] > s2[i])//for lexicographical sorting
			return 1;
		else if (s1[i] < s2[i])
			return -1;
		i++;//if equal
	}
	//if first string length > second string length then second string should come first
	if (s1.length() > s2.length())
	{
		return -1;
	}
	else
	{
		return 1;
	}
}

void bubble_sort(std::vector<string> &a)
{
	int n = a.size();
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n - i - 1; j++)
		{
			if (compareTo(a[j], a[j + 1]) > 0)
			{
				swap(a[j], a[j + 1]);
			}
		}
	}
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	int n;
	cin >> n;
	std::vector<string> a(n);
	for (int i = 0; i < n; i++)
		cin >> a[i];
	bubble_sort(a);
	for (int i = 0; i < n; i++)
		cout << a[i] << endl;
}
